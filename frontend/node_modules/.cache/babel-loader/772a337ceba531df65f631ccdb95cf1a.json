{"ast":null,"code":"import _asyncToGenerator from \"/workspace/animalNFTmarket/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/workspace/animalNFTmarket/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/workspace/animalNFTmarket/frontend/src/routes/sale-animal.tsx\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport React, { useEffect, useState } from \"react\";\nimport { Grid } from \"@chakra-ui/react\";\nimport { mintAnimalTokenContract, saleAnimalTokenContract } from \"../web3Config\";\nimport SaleAnimalCard from \"../components/SaleAnimalCard\";\nvar SaleAnimal = function SaleAnimal(_ref) {\n  var account = _ref.account;\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    saleAnimalCardArray = _useState2[0],\n    setsaleAnimalCardArray = _useState2[1]; //현재 판매 상태인 토큰을 가져오는 함수\n  var getOnSaleAnimalTokens = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var onSaleAnimalTokenArrayLength, tempOnSaleArray, i, animalTokenId, animalType, animalPrice;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return saleAnimalTokenContract.methods.getOnSaleAnimalTokenArrayLength().call();\n            case 3:\n              onSaleAnimalTokenArrayLength = _context.sent;\n              tempOnSaleArray = []; //판매 토큰 정보 가져와 배열에 넣기\n              i = 0;\n            case 6:\n              if (!(i < parseInt(onSaleAnimalTokenArrayLength))) {\n                _context.next = 20;\n                break;\n              }\n              _context.next = 9;\n              return saleAnimalTokenContract.methods.onSaleAnimalTokenArray(i).call();\n            case 9:\n              animalTokenId = _context.sent;\n              _context.next = 12;\n              return mintAnimalTokenContract.methods.animalTypes(animalTokenId).call();\n            case 12:\n              animalType = _context.sent;\n              _context.next = 15;\n              return saleAnimalTokenContract.methods.animalTokenPrices(animalTokenId).call();\n            case 15:\n              animalPrice = _context.sent;\n              tempOnSaleArray.push({\n                animalTokenId: animalTokenId,\n                animalType: animalType,\n                animalPrice: animalPrice\n              });\n            case 17:\n              i++;\n              _context.next = 6;\n              break;\n            case 20:\n              setsaleAnimalCardArray(tempOnSaleArray);\n              _context.next = 26;\n              break;\n            case 23:\n              _context.prev = 23;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n            case 26:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 23]]);\n    }));\n    return function getOnSaleAnimalTokens() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  useEffect(function () {\n    getOnSaleAnimalTokens();\n  }, []);\n  return /*#__PURE__*/React.createElement(Grid, {\n    mt: 4,\n    templateColumns: \"repeat(4, 1fr)\",\n    gap: 8,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }\n  }, saleAnimalCardArray && saleAnimalCardArray.map(function (v, i) {\n    return /*#__PURE__*/React.createElement(SaleAnimalCard, {\n      key: i,\n      animalType: v.animalType,\n      animalTokenId: v.animalTokenId,\n      animalPrice: v.animalPrice,\n      account: account,\n      getOnSaleAnimalTokens: getOnSaleAnimalTokens,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    });\n  }));\n};\nexport default SaleAnimal;","map":{"version":3,"names":["React","useEffect","useState","Grid","mintAnimalTokenContract","saleAnimalTokenContract","SaleAnimalCard","SaleAnimal","account","saleAnimalCardArray","setsaleAnimalCardArray","getOnSaleAnimalTokens","methods","getOnSaleAnimalTokenArrayLength","call","onSaleAnimalTokenArrayLength","tempOnSaleArray","i","parseInt","onSaleAnimalTokenArray","animalTokenId","animalTypes","animalType","animalTokenPrices","animalPrice","push","console","error","map","v"],"sources":["/workspace/animalNFTmarket/frontend/src/routes/sale-animal.tsx"],"sourcesContent":["import React, { FC, useEffect, useState } from \"react\";\nimport { Grid, Flex, Box, Text, Button } from \"@chakra-ui/react\";\nimport { IMyAnimalCard } from \"../components/MyAnimalCard\";\nimport { mintAnimalTokenContract, saleAnimalTokenContract } from \"../web3Config\";\nimport SaleAnimalCard from \"../components/SaleAnimalCard\";\n\n\ninterface SaleAnimalProps {\n    account: string;\n    \n}\n\nconst SaleAnimal: FC<SaleAnimalProps> = ({ account }) => {\n    const [saleAnimalCardArray, setsaleAnimalCardArray] = useState<IMyAnimalCard[]>();\n\n    //현재 판매 상태인 토큰을 가져오는 함수\n    const getOnSaleAnimalTokens = async () => {\n        try {\n            //판매 토큰 배열 길이 가져오기\n            const onSaleAnimalTokenArrayLength = await saleAnimalTokenContract.methods\n                .getOnSaleAnimalTokenArrayLength()\n                .call();\n\n            const tempOnSaleArray: IMyAnimalCard[] = [];\n\n            //판매 토큰 정보 가져와 배열에 넣기\n            for(let i = 0; i < parseInt(onSaleAnimalTokenArrayLength); i++) {\n                const animalTokenId = await saleAnimalTokenContract.methods\n                    .onSaleAnimalTokenArray(i)\n                    .call();\n                \n                const animalType = await mintAnimalTokenContract.methods\n                    .animalTypes(animalTokenId)\n                    .call(); \n                \n                const animalPrice = await saleAnimalTokenContract.methods\n                    .animalTokenPrices(animalTokenId)\n                    .call();              \n                    \n                tempOnSaleArray.push({animalTokenId, animalType, animalPrice})\n            }\n\n            setsaleAnimalCardArray(tempOnSaleArray);\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    useEffect(() => {\n        getOnSaleAnimalTokens();\n    }, []);\n\n    return <Grid mt={4} templateColumns=\"repeat(4, 1fr)\" gap={8}>\n        {saleAnimalCardArray && saleAnimalCardArray.map((v, i) => {\n            return (\n                <SaleAnimalCard \n                    key={i} \n                    animalType={v.animalType} \n                    animalTokenId={v.animalTokenId} \n                    animalPrice={v.animalPrice}\n                    account={account}\n                    getOnSaleAnimalTokens={getOnSaleAnimalTokens}\n                />\n            );\n        })}\n    </Grid>;\n};\n\nexport default SaleAnimal;\n"],"mappings":";;;;+CACA;AADA,OAAOA,KAAK,IAAQC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AACtD,SAASC,IAAI,QAAiC,kBAAkB;AAEhE,SAASC,uBAAuB,EAAEC,uBAAuB,QAAQ,eAAe;AAChF,OAAOC,cAAc,MAAM,8BAA8B;AAQzD,IAAMC,UAA+B,GAAG,SAAlCA,UAA+B,OAAoB;EAAA,IAAdC,OAAO,QAAPA,OAAO;EAAA,gBACQN,QAAQ,EAAmB;IAAA;IAA1EO,mBAAmB;IAAEC,sBAAsB,kBAElD;EACA,IAAMC,qBAAqB;IAAA,uEAAG;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA;cAAA,OAGqBN,uBAAuB,CAACO,OAAO,CACrEC,+BAA+B,EAAE,CACjCC,IAAI,EAAE;YAAA;cAFLC,4BAA4B;cAI5BC,eAAgC,GAAG,EAAE,EAE3C;cACQC,CAAC,GAAG,CAAC;YAAA;cAAA,MAAEA,CAAC,GAAGC,QAAQ,CAACH,4BAA4B,CAAC;gBAAA;gBAAA;cAAA;cAAA;cAAA,OACzBV,uBAAuB,CAACO,OAAO,CACtDO,sBAAsB,CAACF,CAAC,CAAC,CACzBH,IAAI,EAAE;YAAA;cAFLM,aAAa;cAAA;cAAA,OAIMhB,uBAAuB,CAACQ,OAAO,CACnDS,WAAW,CAACD,aAAa,CAAC,CAC1BN,IAAI,EAAE;YAAA;cAFLQ,UAAU;cAAA;cAAA,OAIUjB,uBAAuB,CAACO,OAAO,CACpDW,iBAAiB,CAACH,aAAa,CAAC,CAChCN,IAAI,EAAE;YAAA;cAFLU,WAAW;cAIjBR,eAAe,CAACS,IAAI,CAAC;gBAACL,aAAa,EAAbA,aAAa;gBAAEE,UAAU,EAAVA,UAAU;gBAAEE,WAAW,EAAXA;cAAW,CAAC,CAAC;YAAA;cAbPP,CAAC,EAAE;cAAA;cAAA;YAAA;cAgB9DP,sBAAsB,CAACM,eAAe,CAAC;cAAC;cAAA;YAAA;cAAA;cAAA;cAExCU,OAAO,CAACC,KAAK,aAAO;YAAC;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAE5B;IAAA,gBA9BKhB,qBAAqB;MAAA;IAAA;EAAA,GA8B1B;EAEDV,SAAS,CAAC,YAAM;IACZU,qBAAqB,EAAE;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAO,oBAAC,IAAI;IAAC,EAAE,EAAE,CAAE;IAAC,eAAe,EAAC,gBAAgB;IAAC,GAAG,EAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACvDF,mBAAmB,IAAIA,mBAAmB,CAACmB,GAAG,CAAC,UAACC,CAAC,EAAEZ,CAAC,EAAK;IACtD,oBACI,oBAAC,cAAc;MACX,GAAG,EAAEA,CAAE;MACP,UAAU,EAAEY,CAAC,CAACP,UAAW;MACzB,aAAa,EAAEO,CAAC,CAACT,aAAc;MAC/B,WAAW,EAAES,CAAC,CAACL,WAAY;MAC3B,OAAO,EAAEhB,OAAQ;MACjB,qBAAqB,EAAEG,qBAAsB;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,EAC/C;EAEV,CAAC,CAAC,CACC;AACX,CAAC;AAED,eAAeJ,UAAU"},"metadata":{},"sourceType":"module"}