{"ast":null,"code":"import _asyncToGenerator from \"/workspace/animalNFTmarket/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/workspace/animalNFTmarket/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _this = this,\n  _jsxFileName = \"/workspace/animalNFTmarket/frontend/src/components/MyAnimalCard.tsx\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport React, { useState } from 'react';\nimport { Box, Button, Text, InputGroup, Input, InputRightAddon } from '@chakra-ui/react';\nimport AnimalCard from \"./AnimalCard\";\nimport { saleAnimalTokenContract, web3 } from '../web3Config';\n\n//내가 가진 animal card의 정보\n\nvar MyAnimalCard = function MyAnimalCard(_ref) {\n  var animalTokenId = _ref.animalTokenId,\n    animalType = _ref.animalType,\n    animalPrice = _ref.animalPrice,\n    saleStatus = _ref.saleStatus,\n    account = _ref.account;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    sellPrice = _useState2[0],\n    setSellPrice = _useState2[1]; //input의 값이 바뀔 때마다 sellPrice가 그 input으로 set됨\n  var onChangeSellPrice = function onChangeSellPrice(e) {\n    setSellPrice(e.target.value);\n  };\n  var onClickSell = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var response;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              if (!(!account || !saleStatus)) {\n                _context.next = 3;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 3:\n              _context.next = 5;\n              return saleAnimalTokenContract.methods.setForSaleAnimalToken(animalTokenId, web3.utils.toWei);\n            case 5:\n              response = _context.sent;\n              _context.next = 11;\n              break;\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n    return function onClickSell() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return /*#__PURE__*/React.createElement(Box, {\n    textAlign: \"center\",\n    w: 150,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AnimalCard, {\n    animalType: animalType,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    mt: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, animalPrice === \"0\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InputGroup, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"number\",\n    value: sellPrice,\n    onChange: onChangeSellPrice,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(InputRightAddon, {\n    children: \"Matic\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    size: \"sm\",\n    colorScheme: \"green\",\n    mt: 2,\n    onClick: onClickSell,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, \"Sell\")) : /*#__PURE__*/React.createElement(Text, {\n    d: \"inline-block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, web3.utils.fromWei(animalPrice), \" Matic\")));\n};\nexport default MyAnimalCard;","map":{"version":3,"names":["React","useState","Box","Button","Text","InputGroup","Input","InputRightAddon","AnimalCard","saleAnimalTokenContract","web3","MyAnimalCard","animalTokenId","animalType","animalPrice","saleStatus","account","sellPrice","setSellPrice","onChangeSellPrice","e","target","value","onClickSell","methods","setForSaleAnimalToken","utils","toWei","response","console","error","fromWei"],"sources":["/workspace/animalNFTmarket/frontend/src/components/MyAnimalCard.tsx"],"sourcesContent":["import React, { FC, useState, ChangeEvent } from 'react'\nimport { Box, Button, Text, InputGroup, Input, InputRightAddon } from '@chakra-ui/react'\nimport AnimalCard from \"./AnimalCard\";\nimport { saleAnimalTokenAddress, saleAnimalTokenContract, web3 } from '../web3Config';\n\n//내가 가진 animal card의 정보\nexport interface IMyAnimalCard {\n  animalTokenId: string;\n  animalType: string;\n  animalPrice: string;\n}\n\ninterface MyAnimalCardProps extends IMyAnimalCard {\n  saleStatus: boolean;\n  account: string;\n}\n\nconst MyAnimalCard: FC<MyAnimalCardProps> = ({ animalTokenId, animalType, animalPrice, saleStatus, account }) => {\n  const [sellPrice, setSellPrice] = useState<string>(\"\");\n\n  //input의 값이 바뀔 때마다 sellPrice가 그 input으로 set됨\n  const onChangeSellPrice = (e: ChangeEvent<HTMLInputElement>) => {\n    setSellPrice(e.target.value);\n  };\n\n  const onClickSell = async () => {\n    try {\n      if(!account || !saleStatus) return;\n\n      const response = await saleAnimalTokenContract.methods.setForSaleAnimalToken(animalTokenId, web3.utils.toWei)\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  return (\n    <Box textAlign=\"center\" w={150}>\n      <AnimalCard animalType={animalType}/>\n      <Box mt={2}>\n        {animalPrice === \"0\" ? (\n          <>\n            <InputGroup>\n              <Input type=\"number\" value={sellPrice} onChange={onChangeSellPrice} />\n              <InputRightAddon children=\"Matic\" />\n            </InputGroup>\n            <Button size=\"sm\" colorScheme=\"green\" mt={2} onClick={onClickSell}>\n              Sell\n            </Button>\n          </>\n        ) : (\n          <Text d=\"inline-block\">\n            {web3.utils.fromWei(animalPrice)} Matic\n          </Text>\n        )}\n      </Box>\n    </Box>\n  );\n}\n\nexport default MyAnimalCard"],"mappings":";;;;+CACA;AADA,OAAOA,KAAK,IAAQC,QAAQ,QAAqB,OAAO;AACxD,SAASC,GAAG,EAAEC,MAAM,EAAEC,IAAI,EAAEC,UAAU,EAAEC,KAAK,EAAEC,eAAe,QAAQ,kBAAkB;AACxF,OAAOC,UAAU,MAAM,cAAc;AACrC,SAAiCC,uBAAuB,EAAEC,IAAI,QAAQ,eAAe;;AAErF;;AAYA,IAAMC,YAAmC,GAAG,SAAtCA,YAAmC,OAAwE;EAAA,IAAlEC,aAAa,QAAbA,aAAa;IAAEC,UAAU,QAAVA,UAAU;IAAEC,WAAW,QAAXA,WAAW;IAAEC,UAAU,QAAVA,UAAU;IAAEC,OAAO,QAAPA,OAAO;EAAA,gBACtEf,QAAQ,CAAS,EAAE,CAAC;IAAA;IAA/CgB,SAAS;IAAEC,YAAY,kBAE9B;EACA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAiB,CAAIC,CAAgC,EAAK;IAC9DF,YAAY,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC9B,CAAC;EAED,IAAMC,WAAW;IAAA,uEAAG;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA,MAEb,CAACP,OAAO,IAAI,CAACD,UAAU;gBAAA;gBAAA;cAAA;cAAA;YAAA;cAAA;cAAA,OAEHN,uBAAuB,CAACe,OAAO,CAACC,qBAAqB,CAACb,aAAa,EAAEF,IAAI,CAACgB,KAAK,CAACC,KAAK,CAAC;YAAA;cAAvGC,QAAQ;cAAA;cAAA;YAAA;cAAA;cAAA;cAEdC,OAAO,CAACC,KAAK,aAAO;YAAC;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAExB;IAAA,gBARKP,WAAW;MAAA;IAAA;EAAA,GAQhB;EAED,oBACE,oBAAC,GAAG;IAAC,SAAS,EAAC,QAAQ;IAAC,CAAC,EAAE,GAAI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBAC7B,oBAAC,UAAU;IAAC,UAAU,EAAEV,UAAW;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAE,eACrC,oBAAC,GAAG;IAAC,EAAE,EAAE,CAAE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACRC,WAAW,KAAK,GAAG,gBAClB,uDACE,oBAAC,UAAU;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACT,oBAAC,KAAK;IAAC,IAAI,EAAC,QAAQ;IAAC,KAAK,EAAEG,SAAU;IAAC,QAAQ,EAAEE,iBAAkB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,eACtE,oBAAC,eAAe;IAAC,QAAQ,EAAC,OAAO;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAG,CACzB,eACb,oBAAC,MAAM;IAAC,IAAI,EAAC,IAAI;IAAC,WAAW,EAAC,OAAO;IAAC,EAAE,EAAE,CAAE;IAAC,OAAO,EAAEI,WAAY;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,UAEzD,CACR,gBAEH,oBAAC,IAAI;IAAC,CAAC,EAAC,cAAc;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACnBb,IAAI,CAACgB,KAAK,CAACK,OAAO,CAACjB,WAAW,CAAC,WAEnC,CACG,CACF;AAEV,CAAC;AAED,eAAeH,YAAY"},"metadata":{},"sourceType":"module"}